# aws cloudformation delete-stack --stack-name iris-model-prd
# aws cloudformation create-stack --stack-name iris-model-prd --template-body file://deploy-model-prd.yml --parameters file://deploy-model-prd.json
Transform: AWS::Serverless-2016-10-31
Description: Deploy a model at Sagemaker
Parameters:
  ImageRepoName:
    Type: String
    Description: Name of the model image ECR (Docker) repo
  ImageTagName:
    Type: String
    Description: Name of the model image ECR (Docker) tag
  ModelName:
    Type: String
    Description: Name of the model
  TrainJobId:
    Type: String
    Description: Id of the Codepipeline + SagemakerJobs
  TrainSha256:
    Type: String
    Description: The Sha256 hash of the training job info

Resources:
  DeploymentCompleteTopic:
    Type: AWS::SNS::Topic
        
  ApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub mlops-${ModelName}-api
      CodeUri: ../api
      Handler: app.lambda_handler
      Runtime: python3.7
      Role: !GetAtt ApiFunctionRole.Arn
      AutoPublishAlias: "live"
      #AutoPublishCodeSha256: !Ref TrainSha256
      DeploymentPreference:
        Type: Canary10Percent5Minutes #AllAtOnce
        Alarms:
          # A list of alarms that you want to monitor
          - !Ref AliasErrorMetricGreaterThanZeroAlarm
          - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
        Hooks:
          # Validation Lambda functions that are run before & after traffic shifting
          PreTraffic: !Ref PreTrafficLambdaFunction
          PostTraffic: !Ref PostTrafficLambdaFunction
        TriggerConfigurations:
          - TriggerEvents:
              - DeploymentSuccess
              - DeploymentFailure
            TriggerName: DeploymentCompleteTrigger
            TriggerTargetArn: !Ref DeploymentCompleteTopic          
      Environment:
        Variables:
          ENDPOINT_NAME: !Sub mlops-${ModelName}-prd-${TrainJobId}
      Events:
        Invoke:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api
            Method: post
    DependsOn: Endpoint # Only deploy after the new endpoint is created

  ApiFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'        
      Policies:
        - PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:InvokeEndpoint
                Resource: 
                  "arn:aws:sagemaker:*:*:endpoint/*" 
            Version: '2012-10-17'
          PolicyName: SageMakerInvokeEndpoint
  
  PreTrafficLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'CodeDeployHook_mlops-${ModelName}-PreTrafficLambdaFunction'
      CodeUri: ../api
      Handler: pre_traffic_hook.lambda_handler
      Runtime: python3.7
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: 
                !Sub mlops-${AWS::Region}-${AWS::AccountId}
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sagemaker:DescribeEndpoint
                - sagemaker:DescribeTrainingJob
                - sagemaker:InvokeEndpoint
              Resource: 
                "arn:aws:sagemaker:*:*:endpoint/*"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - codedeploy:PutLifecycleEventHookExecutionStatus
              Resource:
                !Sub 'arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
      DeploymentPreference:
        Enabled: False
      Environment:
        Variables:
          FUNCTION_NAME: !Ref ApiFunction
          FUNCTION_VERSION: !GetAtt ApiFunction.Version.Version
          ENDPOINT_NAME: !Sub mlops-${ModelName}-prd-${TrainJobId}
          TRAINING_JOB_NAME: !Sub mlops-${ModelName}-${TrainJobId}

  PostTrafficLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'CodeDeployHook_mlops-${ModelName}-PostTrafficLambdaFunction'
      CodeUri: ../api
      Handler: post_traffic_hook.lambda_handler
      Runtime: python3.7
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - lambda:GetFunction
              Resource: 
                !GetAtt ApiFunction.Arn
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sagemaker:DeleteMonitoringSchedule
              Resource:
                "arn:aws:sagemaker:*:*:endpoint/*"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - codedeploy:PutLifecycleEventHookExecutionStatus
              Resource:
                !Sub 'arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
      DeploymentPreference:
        Enabled: False
      Environment:
        Variables:
          FUNCTION_NAME: !Ref ApiFunction
          FUNCTION_VERSION: !GetAtt ApiFunction.Version.Version

  AliasErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${ApiFunction}:live"
        - Name: FunctionName
          Value: !Ref ApiFunction
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

  LatestVersionErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${ApiFunction}:live"
        - Name: FunctionName
          Value: !Ref ApiFunction
        - Name: ExecutedVersion
          Value: !GetAtt ApiFunction.Version.Version
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
            
  EndpointConfig:
    Type: "AWS::SageMaker::EndpointConfig"
    Properties:
      ProductionVariants:
      - InitialInstanceCount: 2
        InitialVariantWeight: 1.0
        InstanceType: ml.c5.large
        ModelName: !Sub mlops-${ModelName}-${TrainJobId}
        VariantName: !Sub mlops-${ModelName}-prd-${TrainJobId}
      EndpointConfigName: !Sub mlops-ec-${ModelName}-prd-${TrainJobId}
      Tags:
        - Key: Name
          Value: !Sub mlops-ec-${ModelName}-prd-${TrainJobId}

  Endpoint:
    Type: "AWS::SageMaker::Endpoint"
    Properties:
      EndpointName: !Sub mlops-${ModelName}-prd-${TrainJobId}
      EndpointConfigName: !GetAtt EndpointConfig.EndpointConfigName
      Tags:
        - Key: Name
          Value: !Sub mlops-${ModelName}-prd-${TrainJobId}
    DependsOn: EndpointConfig

  AutoScaling:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 2
      ResourceId: !Sub endpoint/mlops-${ModelName}-prd-${TrainJobId}/variant/mlops-${ModelName}-prd-${TrainJobId}
      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/MLOps
      ScalableDimension: sagemaker:variant:DesiredInstanceCount
      ServiceNamespace: sagemaker
    DependsOn: Endpoint

  AutoScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties: 
      PolicyName: SageMakerVariantInvocationsPerInstance
      PolicyType: TargetTrackingScaling
      ResourceId: !Sub endpoint/mlops-${ModelName}-prd-${TrainJobId}/variant/mlops-${ModelName}-prd-${TrainJobId}
      ScalableDimension: sagemaker:variant:DesiredInstanceCount
      
      ServiceNamespace: sagemaker
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 750.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: SageMakerVariantInvocationsPerInstance
    DependsOn: AutoScaling

  

  

  
